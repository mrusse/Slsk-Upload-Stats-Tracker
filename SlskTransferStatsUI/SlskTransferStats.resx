<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="listView2.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="listView2.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="backgroundWorker2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>181, 17</value>
  </metadata>
  <metadata name="backgroundWorker3.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>345, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>63</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        a9BkZGTCYGBgxV5eXpJdXV0vXl5eAF5eXgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACJiYkAiYmJAIeH
        hwyIiIgrjIyMbo6OjtGMjIz/iYmJ/4aGhv+Dg4P/goKC/4GBgf+AgID/fn5+/319ff99fX3/e3t7/3Z2
        dv9wcHD/ampq/2RkZP9gYGD/XV1d0VtbW25WVlYrVVVVDFdXVwBXV1cAAAAAAAAAAAAAAAAAAAAAAImJ
        iQCJiYkAiYmJLomJiZGIiIjUh4eH84aGhv+FhYX/g4OD/4CAgP9/f3//fn5+/319ff98fHz/e3t7/3t7
        e/94eHj/c3Nz/25ubv9paWn/ZWVl/2FhYf9dXV3zWVlZ1FdXV5FWVlYuV1dXAFdXVwAAAAAAAAAAAAAA
        AACKiooAioqKDIqKiiqKiopuiYmJ0YiIiP+FhYX/g4OD/4ODg/+BgYH/fn5+/319ff99fX3/fX19/3t7
        e/97e3v/e3t7/3h4eP9ycnL/bW1t/2lpaf9lZWX/YmJi/15eXv9ZWVn/VlZW0VNTU25OTk4rTU1NDE9P
        TwBPT08AAAAAAImJiQCJiYktiYmJj4mJidSJiYnziIiI/4WFhf+Dg4P/g4OD/4GBgf9+fn7/fX19/319
        ff99fX3/e3t7/3t7e/97e3v/eHh4/3Jycv9tbW3/aWlp/2VlZf9iYmL/Xl5e/1lZWf9VVVXzUVFR1E9P
        T5FOTk4uT09PAE9PTwAAAAAAhoaGAIaGhjyGhoa/hoaG/4WFhf+EhIT/gYGB/4CAgP9/f3//f39/8H5+
        ftB9fX2/fX19v3x8fNB5eXnweHh4/3h4eP92dnbvcnJyz2xsbM9oaGjvZGRk/2FhYf9dXV3/WVlZ/1VV
        Vf9RUVH/Tk5O0UxMTG5HR0cqRkZGDEhISAB/f38Af39/PH9/f79/f3//fn5+/319ff96enr/eXl5/3l5
        ef95eXnQe3t7bX5+fjd+fn43d3d3bXNzc9BycnL/cnJy/3Jycs5xcXFoaWlpaGZmZs5jY2P/YGBg/1xc
        XP9ZWVn/VVVV/1FRUf9NTU3zSkpK1EhISI9HR0ctSEhIAGxsbDhzc3NsdnZ20Hh4ePV6enrTenp6wHd3
        d8B2dnbEdnZ2xnZ2dpJ2dnYvcnJyAHBwcABtbW0+bW1twW1tbf9tbW3/bW1tv25ubjlkZGQoZWVljGNj
        Y8NgYGDDXFxcwVlZWcFVVVXAUVFRwE1NTdNJSUn1SEhI0EhISGxISEg4bGxsv21tbdJubm70cHBw0nR0
        dG16eno5d3d3O3V1dT91dXU/dXV1L3V1dQ9sbGwAa2trAGlpaT5paWnBaWlp/2lpaf9paWnBaWlpPGVl
        ZQdmZmYnZGRkO2BgYD1cXFw+WVlZPlZWVjtRUVE5TExMbUpKStJKSkr0SUlJ0khISL9paWn/ampq82tr
        a9VsbGyRbGxsLmxsbABsbGwAAAAAAAAAAABeXl4AXl5eAFxcXAxdXV0rYmJibmVlZdFlZWX/ZGRk/2Nj
        Y9BhYWFtXFxcOllZWTpYWFgtWFhYDlhYWABYWFgASkpKAEpKSgBKSkouSkpKkUlJSdVISEjzSEhI/2Fh
        Yf9iYmLSZWVlcGxsbCtubm4Ma2trAGtrawAAAAAAAAAAAF5eXgBeXl4AXl5eLl5eXpFfX1/UYWFh82Fh
        Yf9fX1//Xl5e8F5eXtBdXV3DWlpax1lZWZVZWVkvWVlZAFlZWQBKSkoASkpKAEpKSgxKSkorSkpKcEpK
        StJKSkr/Xl5ex15eXpNeXl4xXl5eAF5eXgAAAAAAAAAAAAAAAAAAAAAAXV1dAF1dXQBdXV0+XV1dwV1d
        Xf9dXV3/aWlp/4CAgP9/f3//Z2dn/1paWvRZWVnZWVlZlllZWS9ZWVkAWVlZAAAAAAAAAAAASkpKAEpK
        SgBKSkoxSkpKk0pKSsddXV1AXV1dL11dXRBdXV0AXV1dAAAAAAAAAAAAAAAAAAAAAABZWVkAWVlZAFlZ
        WT5ZWVnBV1dX/1ZWVv97e3v/wMDA/7+/v/96enr/VVVV0lVVVXBZWVktWVlZDVlZWQBZWVkAAAAAAAAA
        AABKSkoASkpKAEpKShBKSkovSkpKQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFRU
        VABUVFQAVFRUPlRUVMFSUlL/UlJS/3Z2dv+7u7v/wcHB839/f9RSUlKRTExMLldXVwBXV1cAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAATU1NAE1NTQBNTU0+TU1NwU1NTf9PT0//XFxc/3Jycv96enrRbW1tblJSUitMTEwMV1dXAFdX
        VwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAPDw8ADw8PAA4ODgNOjo6LUJCQnBHR0fSSUlJ/0tLS/9LS0v/SUlJ/0hISMFISEg+SEhIAEhI
        SAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAA8PDwAPDw8ADs7Oy88PDyWPj4+2UFBQfRERET/RUVF/0VFRf9ERET/Q0NDwUND
        Qz5DQ0MAQ0NDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADw8PAA8PDwAPDw8Lzw8PJQ9PT3ZPj4+9UBAQPFCQkLPQ0NDwEND
        Q8NDQ0ORQ0NDLkNDQwBDQ0MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPDw8ADw8PAA8PDwNPDw8LDs7O3I7OzvWOzs71D4+
        Pm5DQ0M4QkJCO0JCQi5CQkIOQkJCAEJCQgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADk5OQA5OTkAOTk5QTk5
        Occ5OTnHOTk5QTk5OQA5OTkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/4f///4H///+B////gH///4B////gH///4B////gH///4B///+AH///g
        B//4AAB/+AAAf+AAAB/gAAAfgAAAB4AAAAeAAAABgAAAAQAYAAAAGAAAB+AB4AfgAeAf4AH4H+AB+P/g
        B///4Af//4Af//+AH///gB///4Af///h//8=
</value>
  </data>
</root>